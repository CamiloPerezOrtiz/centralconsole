principal_homepage:
    path:     /
    defaults: { _controller: PrincipalBundle:Default:index }

#######################################################
#                                                     #
#  Direcciones para el inicio de session              #
#                                                     #
#######################################################

#Muestra el formulario para que el usuario realize el login correspondiente controlador: UsuarioController funcion login#
login:
    path:     /login
    defaults: { _controller: PrincipalBundle:Administrator:login }

#Symfony realiza la validacion correspondiente al login#
login_check:
    path:     /login_check

#Hace el logout correspondiete para terminar la sesion del usuario#
logout:
    path:     /logout

###################################################
#  Area para los archivos txt                     #
###################################################

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
listGroup:
    path:     /listGroup
    defaults: { _controller: PrincipalBundle:Group:listGroup }

#Lee el archivo informacionGrupos.txt para insertar en la base de datos controlador: GrupoController funcion: txtIp #  
txtIp:
    path:     /txtIp
    defaults: { _controller: PrincipalBundle:Group:txtIp }

#Lista las ip del grupo el cual fue seleccionado controlador: GrupoController funcion: listaGrupoIpAction # 
listGroupIpSuperUser:
    path:     /listGroupIpSuperUser/{id}
    defaults: { _controller: PrincipalBundle:Group:listGroupIpSuperUser }

#Lista las ip del grupo el cual fue seleccionado controlador: GrupoController funcion: listaGrupoIpAction # 
listGroupIp:
    path:     /listGroupIp
    defaults: { _controller: PrincipalBundle:Group:listGroupIp }


#Guardar las ip del grupo el cual fue seleccionado controlador: GrupoController funcion: guardarListaIp #
saveListIp:
    path:     /saveListIp
    defaults: { _controller: PrincipalBundle:Group:saveListIp }

#Elimina la ip del grupo el cual fue seleccionado controlador GrupoController funcion eliminarIp#
deleteIp:
    path:     /deleteIp/{id}
    defaults: { _controller: PrincipalBundle:Group:deleteIp }

#Elimina la ip del grupo el cual fue seleccionado controlador GrupoController funcion eliminarIp#
applyIp:
    path:     /applyIp/{id}
    defaults: { _controller: PrincipalBundle:Group:applyIp }

######################################################
#  Area de Dashboard                                 #
######################################################

#Muestra el dashboard del administrador controlador: AdministratorController funcion dashboard#
dashboard:
    path:     /dashboard
    defaults: {_controller: PrincipalBundle:Administrator:dashboard }

######################################################
#  Area del administrador                            #
######################################################

#Registro de un nuevo administrador controlador: AdministratorController funcion registerAdministrator#
registerAdministrator:
    path:     /registerAdministrator 
    defaults: { _controller: PrincipalBundle:Administrator:registerAdministrator }

#Muestra la lista de Administrators controlador: AdministratorController funcion listAdministrator#
listAdministrator:
    path:     /listAdministrator
    defaults: {_controller: PrincipalBundle:Administrator:listAdministrator}

#Elimina el administrador seleccionado controlador AdministratorController funcion editAdministrator#
editAdministrator:
    path:     /editAdministrator/{id}
    defaults: { _controller: PrincipalBundle:Administrator:editAdministrator }

#Elimina el administrador seleccionado controlador AdministratorController funcion editAdministrator#
editAdministratorUser:
    path:     /editAdministratorUser/{id}
    defaults: { _controller: PrincipalBundle:Administrator:editAdministratorUser }

#Edita el Administrator el cual fue seleccionado cotrolador AdministratorController funcion deleteAdministrator#
deleteAdministrator:
    path:     /deleteAdministrator/{id}
    defaults: { _controller: PrincipalBundle:Administrator:deleteAdministrator }

#Registro de un nuevo administrador controlador: AdministratorController funcion registerAdministrator#
registerUserAdministrator:
    path:     /registerUserAdministrator/{id} 
    defaults: { _controller: PrincipalBundle:Administrator:registerUserAdministrator }

#Registro de un nuevo administrador controlador: AdministratorController funcion registerAdministrator#
registerUser:
    path:     /registerUser/{id} 
    defaults: { _controller: PrincipalBundle:Administrator:registerUser }

######################################################
#  Area target categories                            #
######################################################

#Listado de las target categories controlador: TargetcategoriesController funcion: listaTargetcategoriesAction #  
listTarget:
    path:     /listTarget
    defaults: { _controller: PrincipalBundle:Target:listTarget }

listTargetSuperUser:
    path:     /listTargetSuperUser/{id}
    defaults: { _controller: PrincipalBundle:Target:listTargetSuperUser }

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
listGroupTarget:
    path:     /listGroupTarget
    defaults: { _controller: PrincipalBundle:Target:listGroupTarget }

#Elimina el target categories seleccionado controlador: TargetcategoriesController funcion eliminarTargetcategories#
deleteTarget:
    path:     /deleteTarget/{id}
    defaults: { _controller: PrincipalBundle:Target:deleteTarget }

#Edita el usuario el cual fue seleccionado controlador: TargetcategoriesController funcion editarTargetcategories#
editTarget:
    path:     /editTarget/{id}
    defaults: { _controller: PrincipalBundle:Target:editTarget }

#Registro de un nuevo target categories controlador:TargetcategoriesController funcion registroTargetcategoriesr#
registerTargetSuperUser:
    path:     /registerTargetSuperUser/{id}
    defaults: { _controller: PrincipalBundle:Target:registerTargetSuperUser }

#Registro de un nuevo target categories controlador:TargetcategoriesController funcion registroTargetcategoriesr#
registerTarget:
    path:     /registerTarget
    defaults: { _controller: PrincipalBundle:Target:registerTarget }

#Edita el acl el cual fue seleccionado controlador: AclgroupsController funcion editarAclgroups#
txtTarget:
    path:     /txtTarget
    defaults: { _controller: PrincipalBundle:Target:txtTarget }

#Crear XML target categories controlador:TargetcategoriesController funcion crearXMLTargetcategories #
createXMLTarget:
    path:     /createXMLTarget/{id}
    defaults: { _controller: PrincipalBundle:Target:createXMLTarget}

#Crear XML target categories controlador:TargetcategoriesController funcion crearXMLTargetcategories #
aplicateXMLTarget:
    path:     /aplicateXMLTarget/{id}
    defaults: { _controller: PrincipalBundle:Target:aplicateXMLTarget }

###################################################
#  Area Acl groups                                #
###################################################

#Registro de un nuevo acl groups controlador:AclgroupsController funcion registroAclgroups#
registerAcl:
    path:     /registerAcl
    defaults: { _controller: PrincipalBundle:Acl:registerAcl }

#Registro de un nuevo acl groups controlador:AclgroupsController funcion registroAclgroups#
registerAclSuperUser:
    path:     /registerAclSuperUser/{id}
    defaults: { _controller: PrincipalBundle:Acl:registerAclSuperUser }

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
listGroupAcl:
    path:     /listGroupAcl
    defaults: { _controller: PrincipalBundle:Acl:listGroupAcl }

#Listado de las acl groups controlador: AclgroupsController funcion: listaAclgroupsAction #  
listAcl:
    path:     /listAcl
    defaults: { _controller: PrincipalBundle:Acl:listAcl }

#Listado de las acl groups controlador: AclgroupsController funcion: listaAclgroupsAction #  
listAclSuperUser:
    path:     /listAclSuperUser/{id}
    defaults: { _controller: PrincipalBundle:Acl:listAclSuperUser }

deleteAcl:
    path:     /deleteAcl/{id}
    defaults: { _controller: PrincipalBundle:Acl:deleteAcl }

#Edita el acl el cual fue seleccionado controlador: AclgroupsController funcion editarAclgroups#
editAcl:
    path:     /editAcl/{id}
    defaults: { _controller: PrincipalBundle:Acl:editAcl }

#Crear XML acl groups controlador:AclgroupsController funcion crearXMLAclgroups #
createXMLAcl:
    path:     /createXMLAcl/{id}
    defaults: { _controller: PrincipalBundle:Acl:createXMLAcl }

#Crear XML acl groups controlador:AclgroupsController funcion crearXMLAclgroups #
aplicateXMLAcl:
    path:     /aplicateXMLAcl/{id} 
    defaults: { _controller: PrincipalBundle:Acl:aplicateXMLAcl }

###############################################
#  Area Aliases                               #
############################################### 

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
listGroupAliases:
    path:     /listGroupAliases
    defaults: { _controller: PrincipalBundle:Aliases:listGroupAliases }

#Listado de las target categories controlador: TargetcategoriesController funcion: listaTargetcategoriesAction #  
listAliases:
    path:     /listAliases
    defaults: { _controller: PrincipalBundle:Aliases:listAliases }

#Listado de las target categories controlador: TargetcategoriesController funcion: listaTargetcategoriesAction #  
listAliasesSuperUser:
    path:     /listAliasesSuperUser/{id}
    defaults: { _controller: PrincipalBundle:Aliases:listAliasesSuperUser }

#Elimina el target categories seleccionado controlador: AliasesController funcion eliminarAliases#
deleteAliases:
    path:     /deleteAliases/{id}
    defaults: { _controller: PrincipalBundle:Aliases:deleteAliases }

#Edita el usuario el cual fue seleccionado controlador: AliasesController funcion editarAliases#
editAliases:
    path:     /editAliases/{id}
    defaults: { _controller: PrincipalBundle:Aliases:editAliases }

#Registro de un nuevo target categories controlador:AliasesController funcion registroAliasesr#
registerAliases:
    path:     /registerAliases
    defaults: { _controller: PrincipalBundle:Aliases:registerAliases }

#Registro de un nuevo target categories controlador:AliasesController funcion registroAliasesr#
registerAliasesSuperUser:
    path:     /registerAliasesSuperUser/{id} 
    defaults: { _controller: PrincipalBundle:Aliases:registerAliasesSuperUser }

#Crear XML acl groups controlador:AliasesController funcion crearXMLAliases #
createXMLAliases:
    path:     /createXMLAliases/{id}
    defaults: { _controller: PrincipalBundle:Aliases:createXMLAliases }

#Crear XML acl groups controlador:AliasesController funcion crearXMLAliases #
aplicateXMLAliases:
    path:     /aplicateXMLAliases/{id}
    defaults: { _controller: PrincipalBundle:Aliases:aplicateXMLAliases }

#############################################################################
#                                                                           #                                                 
#       Area de nats                                                        #
#                                                                           #
#############################################################################

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
listGroupNat:
    path:     /listGroupNat
    defaults: { _controller: PrincipalBundle:Nat:listGroupNat }

#Listado de las target categories controlador: TargetcategoriesController funcion: listaTargetcategoriesAction #  
listNat:
    path:     /listNat
    defaults: { _controller: PrincipalBundle:Nat:listNat }

#Listado de las target categories controlador: TargetcategoriesController funcion: listaTargetcategoriesAction #  
listNatSuperUser:
    path:     /listNatSuperUser/{id}
    defaults: { _controller: PrincipalBundle:Nat:listNatSuperUser }

#Elimina el target categories seleccionado controlador: AliasesController funcion eliminarAliases#
deleteNat:
    path:     /deleteNat/{id}
    defaults: { _controller: PrincipalBundle:Nat:deleteNat }

#Edita el usuario el cual fue seleccionado controlador: NatController funcion editarNat#
editNat:
    path:     /editNat/{id}
    defaults: { _controller: PrincipalBundle:Nat:editNat }

#Elimina el target categories seleccionado controlador: AliasesController funcion eliminarAliases#
deleteNatOne:
    path:     /deleteNatOne/{id}
    defaults: { _controller: PrincipalBundle:Nat:deleteNatOne }

#Edita el usuario el cual fue seleccionado controlador: NatController funcion editarNat#
editNatOne:
    path:     /editNatOne/{id}
    defaults: { _controller: PrincipalBundle:Nat:editNatOne }

#Registro de un nuevo target categories controlador:NatController funcion registroNatr#
registerNat:
    path:     /registerNat
    defaults: { _controller: PrincipalBundle:Nat:registerNat }

#Registro de un nuevo target categories controlador:NatController funcion registroNatr#
registerNatSuperUser:
    path:     /registerNatSuperUser/{id} 
    defaults: { _controller: PrincipalBundle:Nat:registerNatSuperUser }

#Registro de un nuevo target categories controlador:NatController funcion registroNatr#
registerNatOne:
    path:     /registerNatOne
    defaults: { _controller: PrincipalBundle:Nat:registerNatOne }

#Registro de un nuevo target categories controlador:NatController funcion registroNatr#
registerNatOneSuperUser:
    path:     /registerNatOneSuperUser/{id} 
    defaults: { _controller: PrincipalBundle:Nat:registerNatOneSuperUser }

#Crear XML acl groups controlador:NatController funcion crearXMLNat #
createXMLNat:
    path:     /createXMLNat/{id}
    defaults: { _controller: PrincipalBundle:Nat:createXMLNat }

#Crear XML acl groups controlador:NatController funcion crearXMLNat #
aplicateXMLNat:
    path:     /aplicateXMLNat/{id}
    defaults: { _controller: PrincipalBundle:Nat:aplicateXMLNat }

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
auto:
    path:     /auto
    defaults: { _controller: PrincipalBundle:Nat:auto }

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
refresh:
    path:     /refresh
    defaults: { _controller: PrincipalBundle:Nat:refresh }

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
refreshOne:
    path:     /refreshOne
    defaults: { _controller: PrincipalBundle:Nat:refreshOne }

################################################################################
#                                                                              #
#            Firewall rules                                                    #
#                                                                              #
################################################################################

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
listGroupFirewall:
    path:     /listGroupFirewall
    defaults: { _controller: PrincipalBundle:Firewall:listGroupFirewall }

#Listado de las target categories controlador: TargetcategoriesController funcion: listaTargetcategoriesAction #  
listFirewallSuperUser:
    path:     /listFirewallSuperUser/{id}
    defaults: { _controller: PrincipalBundle:Firewall:listFirewallSuperUser }

#Listado de las target categories controlador: TargetcategoriesController funcion: listaTargetcategoriesAction #  
listFirewall:
    path:     /listFirewall
    defaults: { _controller: PrincipalBundle:Firewall:listFirewall }

#Registro de un nuevo target categories controlador:NatController funcion registroNatr#
registerFirewallSuperUser:
    path:     /registerFirewallSuperUser/{id} 
    defaults: { _controller: PrincipalBundle:Firewall:registerFirewallSuperUser }

#Registro de un nuevo target categories controlador:NatController funcion registroNatr#
registerFirewallWan:
    path:     /registerFirewallWan
    defaults: { _controller: PrincipalBundle:Firewall:registerFirewallWan }

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
refreshFirewallWan:
    path:     /refreshFirewallWan
    defaults: { _controller: PrincipalBundle:Firewall:refreshFirewallWan }

#Elimina el target categories seleccionado controlador: AliasesController funcion eliminarAliases#
deleteFirewallWan:
    path:     /deleteFirewallWan/{id}
    defaults: { _controller: PrincipalBundle:Firewall:deleteFirewallWan }

#Edita el usuario el cual fue seleccionado controlador: FirewallWanController funcion editarFirewallWan#
editFirewallWan:
    path:     /editFirewallWan/{id}
    defaults: { _controller: PrincipalBundle:Firewall:editFirewallWan }

#Registro de un nuevo target categories controlador:NatController funcion registroNatr#
registerFirewallLanSuperUser:
    path:     /registerFirewallLanSuperUser/{id} 
    defaults: { _controller: PrincipalBundle:Firewall:registerFirewallLanSuperUser }

#Registro de un nuevo target categories controlador:NatController funcion registroNatr#
registerFirewallLan:
    path:     /registerFirewallLan
    defaults: { _controller: PrincipalBundle:Firewall:registerFirewallLan }

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
refreshFirewallLan:
    path:     /refreshFirewallLan
    defaults: { _controller: PrincipalBundle:Firewall:refreshFirewallLan }

#Elimina el target categories seleccionado controlador: AliasesController funcion eliminarAliases#
deleteFirewallLan:
    path:     /deleteFirewallLan/{id}
    defaults: { _controller: PrincipalBundle:Firewall:deleteFirewallLan }

#Edita el usuario el cual fue seleccionado controlador: FirewallWanController funcion editarFirewallWan#
editFirewallLan:
    path:     /editFirewallLan/{id}
    defaults: { _controller: PrincipalBundle:Firewall:editFirewallLan }

#Crear XML acl groups controlador:NatController funcion crearXMLNat #
createXMLFirewall:
    path:     /createXMLFirewall/{id}
    defaults: { _controller: PrincipalBundle:Firewall:createXMLFirewall }

#Crear XML acl groups controlador:NatController funcion crearXMLNat #
aplicateXMLFirewall:
    path:     /aplicateXMLFirewall/{id}
    defaults: { _controller: PrincipalBundle:Firewall:aplicateXMLFirewall }